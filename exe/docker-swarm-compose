#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'docker/swarm/compose'

program :name, 'docker-swarm-compose'
program :version, Docker::Swarm::Compose::VERSION
program :description, 'Docker client program for composing on a Docker Swarm'

command :build do |c|
  c.syntax = 'docker-swarm-compose build [options]'
  c.summary = 'Builds images required for running a composed application'
  c.description = <<-EOT
  Uses the service build specifications to prepare the images required to run
  this application. In the absence of a shared Docker registry, this command
  must be run on all machines that are part of the target swarm.
  EOT
  c.example 'Default usage', 'docker-swarm-compose build'
  c.when_called Docker::Swarm::Compose::Commands::Build, :run
end

command :up do |c|
  c.syntax = 'docker-swarm-compose up [options]'
  c.summary = 'Instantiate a composed application'
  c.description = 'Not yet implemented.'
  c.when_called Docker::Swarm::Compose::Commands::Up, :run
end

command :down do |c|
  c.syntax = 'docker-swarm-compose down [options]'
  c.summary = 'Terminate a composed application'
  c.description = 'Not yet implemented.'
  c.when_called Docker::Swarm::Compose::Commands::Down, :run
end

